// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package event

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventDetail struct {
	Id                          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BriefDescription            string   `protobuf:"bytes,3,opt,name=brief_description,json=briefDescription,proto3" json:"brief_description,omitempty"`
	StartDate                   string   `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime                   string   `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndDate                     string   `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	EndTime                     string   `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	VenueName                   string   `protobuf:"bytes,8,opt,name=venue_name,json=venueName,proto3" json:"venue_name,omitempty"`
	Address                     string   `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Address_2                   string   `protobuf:"bytes,10,opt,name=address_2,json=address2,proto3" json:"address_2,omitempty"`
	VenueCity                   string   `protobuf:"bytes,11,opt,name=venue_city,json=venueCity,proto3" json:"venue_city,omitempty"`
	VenueCountry                string   `protobuf:"bytes,12,opt,name=venue_country,json=venueCountry,proto3" json:"venue_country,omitempty"`
	VenueState                  string   `protobuf:"bytes,13,opt,name=venue_state,json=venueState,proto3" json:"venue_state,omitempty"`
	CoverImageUploadId          string   `protobuf:"bytes,15,opt,name=cover_image_upload_id,json=coverImageUploadId,proto3" json:"cover_image_upload_id,omitempty"`
	Title                       string   `protobuf:"bytes,16,opt,name=title,proto3" json:"title,omitempty"`
	DetailedDescription         string   `protobuf:"bytes,17,opt,name=detailed_description,json=detailedDescription,proto3" json:"detailed_description,omitempty"`
	EventTags                   string   `protobuf:"bytes,19,opt,name=event_tags,json=eventTags,proto3" json:"event_tags,omitempty"`
	MysqlId                     string   `protobuf:"bytes,20,opt,name=mysql_id,json=mysqlId,proto3" json:"mysql_id,omitempty"`
	UserId                      string   `protobuf:"bytes,21,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartTimestamp              string   `protobuf:"bytes,22,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp                string   `protobuf:"bytes,23,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	Timezone                    string   `protobuf:"bytes,24,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Zone                        string   `protobuf:"bytes,25,opt,name=zone,proto3" json:"zone,omitempty"`
	IsFeatured                  bool     `protobuf:"varint,26,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty"`
	CreatedOn                   string   `protobuf:"bytes,27,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	Keywords                    []string `protobuf:"bytes,28,rep,name=keywords,proto3" json:"keywords,omitempty"`
	AllowSponsorEnquires        string   `protobuf:"bytes,29,opt,name=allow_sponsor_enquires,json=allowSponsorEnquires,proto3" json:"allow_sponsor_enquires,omitempty"`
	AllowExhibitorEnquires      string   `protobuf:"bytes,30,opt,name=allow_exhibitor_enquires,json=allowExhibitorEnquires,proto3" json:"allow_exhibitor_enquires,omitempty"`
	AllowBrochureEnquires       string   `protobuf:"bytes,31,opt,name=allow_brochure_enquires,json=allowBrochureEnquires,proto3" json:"allow_brochure_enquires,omitempty"`
	CoverImageThumbnailUploadId string   `protobuf:"bytes,32,opt,name=cover_image_thumbnail_upload_id,json=coverImageThumbnailUploadId,proto3" json:"cover_image_thumbnail_upload_id,omitempty"`
	FloorPlanUploadId           string   `protobuf:"bytes,33,opt,name=floor_plan_upload_id,json=floorPlanUploadId,proto3" json:"floor_plan_upload_id,omitempty"`
	EventVideo                  string   `protobuf:"bytes,34,opt,name=event_video,json=eventVideo,proto3" json:"event_video,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *EventDetail) Reset()         { *m = EventDetail{} }
func (m *EventDetail) String() string { return proto.CompactTextString(m) }
func (*EventDetail) ProtoMessage()    {}
func (*EventDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *EventDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventDetail.Unmarshal(m, b)
}
func (m *EventDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventDetail.Marshal(b, m, deterministic)
}
func (m *EventDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventDetail.Merge(m, src)
}
func (m *EventDetail) XXX_Size() int {
	return xxx_messageInfo_EventDetail.Size(m)
}
func (m *EventDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_EventDetail.DiscardUnknown(m)
}

var xxx_messageInfo_EventDetail proto.InternalMessageInfo

func (m *EventDetail) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventDetail) GetBriefDescription() string {
	if m != nil {
		return m.BriefDescription
	}
	return ""
}

func (m *EventDetail) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *EventDetail) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *EventDetail) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *EventDetail) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *EventDetail) GetVenueName() string {
	if m != nil {
		return m.VenueName
	}
	return ""
}

func (m *EventDetail) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *EventDetail) GetAddress_2() string {
	if m != nil {
		return m.Address_2
	}
	return ""
}

func (m *EventDetail) GetVenueCity() string {
	if m != nil {
		return m.VenueCity
	}
	return ""
}

func (m *EventDetail) GetVenueCountry() string {
	if m != nil {
		return m.VenueCountry
	}
	return ""
}

func (m *EventDetail) GetVenueState() string {
	if m != nil {
		return m.VenueState
	}
	return ""
}

func (m *EventDetail) GetCoverImageUploadId() string {
	if m != nil {
		return m.CoverImageUploadId
	}
	return ""
}

func (m *EventDetail) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EventDetail) GetDetailedDescription() string {
	if m != nil {
		return m.DetailedDescription
	}
	return ""
}

func (m *EventDetail) GetEventTags() string {
	if m != nil {
		return m.EventTags
	}
	return ""
}

func (m *EventDetail) GetMysqlId() string {
	if m != nil {
		return m.MysqlId
	}
	return ""
}

func (m *EventDetail) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *EventDetail) GetStartTimestamp() string {
	if m != nil {
		return m.StartTimestamp
	}
	return ""
}

func (m *EventDetail) GetEndTimestamp() string {
	if m != nil {
		return m.EndTimestamp
	}
	return ""
}

func (m *EventDetail) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *EventDetail) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *EventDetail) GetIsFeatured() bool {
	if m != nil {
		return m.IsFeatured
	}
	return false
}

func (m *EventDetail) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *EventDetail) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *EventDetail) GetAllowSponsorEnquires() string {
	if m != nil {
		return m.AllowSponsorEnquires
	}
	return ""
}

func (m *EventDetail) GetAllowExhibitorEnquires() string {
	if m != nil {
		return m.AllowExhibitorEnquires
	}
	return ""
}

func (m *EventDetail) GetAllowBrochureEnquires() string {
	if m != nil {
		return m.AllowBrochureEnquires
	}
	return ""
}

func (m *EventDetail) GetCoverImageThumbnailUploadId() string {
	if m != nil {
		return m.CoverImageThumbnailUploadId
	}
	return ""
}

func (m *EventDetail) GetFloorPlanUploadId() string {
	if m != nil {
		return m.FloorPlanUploadId
	}
	return ""
}

func (m *EventDetail) GetEventVideo() string {
	if m != nil {
		return m.EventVideo
	}
	return ""
}

type Organizer struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Website              string   `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	UploadId             string   `protobuf:"bytes,6,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	EtCommisionRate      float64  `protobuf:"fixed64,7,opt,name=et_commision_rate,json=etCommisionRate,proto3" json:"et_commision_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Organizer) Reset()         { *m = Organizer{} }
func (m *Organizer) String() string { return proto.CompactTextString(m) }
func (*Organizer) ProtoMessage()    {}
func (*Organizer) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *Organizer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organizer.Unmarshal(m, b)
}
func (m *Organizer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organizer.Marshal(b, m, deterministic)
}
func (m *Organizer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organizer.Merge(m, src)
}
func (m *Organizer) XXX_Size() int {
	return xxx_messageInfo_Organizer.Size(m)
}
func (m *Organizer) XXX_DiscardUnknown() {
	xxx_messageInfo_Organizer.DiscardUnknown(m)
}

var xxx_messageInfo_Organizer proto.InternalMessageInfo

func (m *Organizer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organizer) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Organizer) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Organizer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Organizer) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Organizer) GetUploadId() string {
	if m != nil {
		return m.UploadId
	}
	return ""
}

func (m *Organizer) GetEtCommisionRate() float64 {
	if m != nil {
		return m.EtCommisionRate
	}
	return 0
}

type Tax struct {
	TaxName              string   `protobuf:"bytes,1,opt,name=tax_name,json=taxName,proto3" json:"tax_name,omitempty"`
	TaxRate              string   `protobuf:"bytes,2,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`
	TaxId                string   `protobuf:"bytes,3,opt,name=tax_id,json=taxId,proto3" json:"tax_id,omitempty"`
	CountryName          string   `protobuf:"bytes,4,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	ShouldAddTax         string   `protobuf:"bytes,5,opt,name=should_add_tax,json=shouldAddTax,proto3" json:"should_add_tax,omitempty"`
	IncludeTax           bool     `protobuf:"varint,6,opt,name=include_tax,json=includeTax,proto3" json:"include_tax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tax) Reset()         { *m = Tax{} }
func (m *Tax) String() string { return proto.CompactTextString(m) }
func (*Tax) ProtoMessage()    {}
func (*Tax) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

func (m *Tax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tax.Unmarshal(m, b)
}
func (m *Tax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tax.Marshal(b, m, deterministic)
}
func (m *Tax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tax.Merge(m, src)
}
func (m *Tax) XXX_Size() int {
	return xxx_messageInfo_Tax.Size(m)
}
func (m *Tax) XXX_DiscardUnknown() {
	xxx_messageInfo_Tax.DiscardUnknown(m)
}

var xxx_messageInfo_Tax proto.InternalMessageInfo

func (m *Tax) GetTaxName() string {
	if m != nil {
		return m.TaxName
	}
	return ""
}

func (m *Tax) GetTaxRate() string {
	if m != nil {
		return m.TaxRate
	}
	return ""
}

func (m *Tax) GetTaxId() string {
	if m != nil {
		return m.TaxId
	}
	return ""
}

func (m *Tax) GetCountryName() string {
	if m != nil {
		return m.CountryName
	}
	return ""
}

func (m *Tax) GetShouldAddTax() string {
	if m != nil {
		return m.ShouldAddTax
	}
	return ""
}

func (m *Tax) GetIncludeTax() bool {
	if m != nil {
		return m.IncludeTax
	}
	return false
}

type Ticket struct {
	Name                      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quantity                  int32    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                     float64  `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Currency                  string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	StartDate                 string   `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime                 string   `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndDate                   string   `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	EndTime                   string   `protobuf:"bytes,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	AllowVisitorRegistrations string   `protobuf:"bytes,9,opt,name=allow_visitor_registrations,json=allowVisitorRegistrations,proto3" json:"allow_visitor_registrations,omitempty"`
	Sold                      int32    `protobuf:"varint,10,opt,name=sold,proto3" json:"sold,omitempty"`
	StartTimestamp            string   `protobuf:"bytes,11,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp              string   `protobuf:"bytes,12,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	Timezone                  string   `protobuf:"bytes,13,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Zone                      string   `protobuf:"bytes,14,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}

func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (m *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(m, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ticket) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Ticket) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Ticket) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Ticket) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *Ticket) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Ticket) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *Ticket) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Ticket) GetAllowVisitorRegistrations() string {
	if m != nil {
		return m.AllowVisitorRegistrations
	}
	return ""
}

func (m *Ticket) GetSold() int32 {
	if m != nil {
		return m.Sold
	}
	return 0
}

func (m *Ticket) GetStartTimestamp() string {
	if m != nil {
		return m.StartTimestamp
	}
	return ""
}

func (m *Ticket) GetEndTimestamp() string {
	if m != nil {
		return m.EndTimestamp
	}
	return ""
}

func (m *Ticket) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Ticket) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type Schedule struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartEndDate         string   `protobuf:"bytes,4,opt,name=startEndDate,proto3" json:"startEndDate,omitempty"`
	Speaker              string   `protobuf:"bytes,5,opt,name=speaker,proto3" json:"speaker,omitempty"`
	Venue                string   `protobuf:"bytes,6,opt,name=venue,proto3" json:"venue,omitempty"`
	ScheduleTitle        string   `protobuf:"bytes,7,opt,name=scheduleTitle,proto3" json:"scheduleTitle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schedule) Reset()         { *m = Schedule{} }
func (m *Schedule) String() string { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()    {}
func (*Schedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}

func (m *Schedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schedule.Unmarshal(m, b)
}
func (m *Schedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schedule.Marshal(b, m, deterministic)
}
func (m *Schedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schedule.Merge(m, src)
}
func (m *Schedule) XXX_Size() int {
	return xxx_messageInfo_Schedule.Size(m)
}
func (m *Schedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Schedule.DiscardUnknown(m)
}

var xxx_messageInfo_Schedule proto.InternalMessageInfo

func (m *Schedule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Schedule) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Schedule) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Schedule) GetStartEndDate() string {
	if m != nil {
		return m.StartEndDate
	}
	return ""
}

func (m *Schedule) GetSpeaker() string {
	if m != nil {
		return m.Speaker
	}
	return ""
}

func (m *Schedule) GetVenue() string {
	if m != nil {
		return m.Venue
	}
	return ""
}

func (m *Schedule) GetScheduleTitle() string {
	if m != nil {
		return m.ScheduleTitle
	}
	return ""
}

type Speaker struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Position             string   `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Company              string   `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	UploadId             string   `protobuf:"bytes,7,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Speaker) Reset()         { *m = Speaker{} }
func (m *Speaker) String() string { return proto.CompactTextString(m) }
func (*Speaker) ProtoMessage()    {}
func (*Speaker) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{5}
}

func (m *Speaker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Speaker.Unmarshal(m, b)
}
func (m *Speaker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Speaker.Marshal(b, m, deterministic)
}
func (m *Speaker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Speaker.Merge(m, src)
}
func (m *Speaker) XXX_Size() int {
	return xxx_messageInfo_Speaker.Size(m)
}
func (m *Speaker) XXX_DiscardUnknown() {
	xxx_messageInfo_Speaker.DiscardUnknown(m)
}

var xxx_messageInfo_Speaker proto.InternalMessageInfo

func (m *Speaker) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Speaker) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Speaker) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Speaker) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Speaker) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Speaker) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Speaker) GetUploadId() string {
	if m != nil {
		return m.UploadId
	}
	return ""
}

type Exhibitor struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	BoothNumber          string   `protobuf:"bytes,3,opt,name=boothNumber,proto3" json:"boothNumber,omitempty"`
	Website              string   `protobuf:"bytes,4,opt,name=website,proto3" json:"website,omitempty"`
	Category             string   `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	UploadId             string   `protobuf:"bytes,7,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exhibitor) Reset()         { *m = Exhibitor{} }
func (m *Exhibitor) String() string { return proto.CompactTextString(m) }
func (*Exhibitor) ProtoMessage()    {}
func (*Exhibitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{6}
}

func (m *Exhibitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exhibitor.Unmarshal(m, b)
}
func (m *Exhibitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exhibitor.Marshal(b, m, deterministic)
}
func (m *Exhibitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exhibitor.Merge(m, src)
}
func (m *Exhibitor) XXX_Size() int {
	return xxx_messageInfo_Exhibitor.Size(m)
}
func (m *Exhibitor) XXX_DiscardUnknown() {
	xxx_messageInfo_Exhibitor.DiscardUnknown(m)
}

var xxx_messageInfo_Exhibitor proto.InternalMessageInfo

func (m *Exhibitor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Exhibitor) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Exhibitor) GetBoothNumber() string {
	if m != nil {
		return m.BoothNumber
	}
	return ""
}

func (m *Exhibitor) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Exhibitor) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Exhibitor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Exhibitor) GetUploadId() string {
	if m != nil {
		return m.UploadId
	}
	return ""
}

type Sponsor struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	Website              string   `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	UploadId             string   `protobuf:"bytes,5,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sponsor) Reset()         { *m = Sponsor{} }
func (m *Sponsor) String() string { return proto.CompactTextString(m) }
func (*Sponsor) ProtoMessage()    {}
func (*Sponsor) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{7}
}

func (m *Sponsor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sponsor.Unmarshal(m, b)
}
func (m *Sponsor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sponsor.Marshal(b, m, deterministic)
}
func (m *Sponsor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sponsor.Merge(m, src)
}
func (m *Sponsor) XXX_Size() int {
	return xxx_messageInfo_Sponsor.Size(m)
}
func (m *Sponsor) XXX_DiscardUnknown() {
	xxx_messageInfo_Sponsor.DiscardUnknown(m)
}

var xxx_messageInfo_Sponsor proto.InternalMessageInfo

func (m *Sponsor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sponsor) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Sponsor) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Sponsor) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Sponsor) GetUploadId() string {
	if m != nil {
		return m.UploadId
	}
	return ""
}

type Partner struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Website              string   `protobuf:"bytes,4,opt,name=website,proto3" json:"website,omitempty"`
	UploadId             string   `protobuf:"bytes,6,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Partner) Reset()         { *m = Partner{} }
func (m *Partner) String() string { return proto.CompactTextString(m) }
func (*Partner) ProtoMessage()    {}
func (*Partner) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{8}
}

func (m *Partner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partner.Unmarshal(m, b)
}
func (m *Partner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partner.Marshal(b, m, deterministic)
}
func (m *Partner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partner.Merge(m, src)
}
func (m *Partner) XXX_Size() int {
	return xxx_messageInfo_Partner.Size(m)
}
func (m *Partner) XXX_DiscardUnknown() {
	xxx_messageInfo_Partner.DiscardUnknown(m)
}

var xxx_messageInfo_Partner proto.InternalMessageInfo

func (m *Partner) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Partner) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Partner) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Partner) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Partner) GetUploadId() string {
	if m != nil {
		return m.UploadId
	}
	return ""
}

type MobileApp struct {
	Amenities            string   `protobuf:"bytes,1,opt,name=amenities,proto3" json:"amenities,omitempty"`
	Help                 string   `protobuf:"bytes,2,opt,name=help,proto3" json:"help,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MobileApp) Reset()         { *m = MobileApp{} }
func (m *MobileApp) String() string { return proto.CompactTextString(m) }
func (*MobileApp) ProtoMessage()    {}
func (*MobileApp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{9}
}

func (m *MobileApp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MobileApp.Unmarshal(m, b)
}
func (m *MobileApp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MobileApp.Marshal(b, m, deterministic)
}
func (m *MobileApp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MobileApp.Merge(m, src)
}
func (m *MobileApp) XXX_Size() int {
	return xxx_messageInfo_MobileApp.Size(m)
}
func (m *MobileApp) XXX_DiscardUnknown() {
	xxx_messageInfo_MobileApp.DiscardUnknown(m)
}

var xxx_messageInfo_MobileApp proto.InternalMessageInfo

func (m *MobileApp) GetAmenities() string {
	if m != nil {
		return m.Amenities
	}
	return ""
}

func (m *MobileApp) GetHelp() string {
	if m != nil {
		return m.Help
	}
	return ""
}

type Event struct {
	EventDetail          *EventDetail `protobuf:"bytes,1,opt,name=eventDetail,proto3" json:"eventDetail,omitempty"`
	Organizer            *Organizer   `protobuf:"bytes,2,opt,name=organizer,proto3" json:"organizer,omitempty"`
	Tax                  *Tax         `protobuf:"bytes,3,opt,name=tax,proto3" json:"tax,omitempty"`
	Ticket               *Ticket      `protobuf:"bytes,4,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Speakers             []*Speaker   `protobuf:"bytes,5,rep,name=speakers,proto3" json:"speakers,omitempty"`
	Exhibitors           []*Exhibitor `protobuf:"bytes,6,rep,name=exhibitors,proto3" json:"exhibitors,omitempty"`
	Sponsors             []*Sponsor   `protobuf:"bytes,7,rep,name=sponsors,proto3" json:"sponsors,omitempty"`
	Partners             []*Partner   `protobuf:"bytes,8,rep,name=partners,proto3" json:"partners,omitempty"`
	Schedule             []*Schedule  `protobuf:"bytes,9,rep,name=schedule,proto3" json:"schedule,omitempty"`
	Categories           []string     `protobuf:"bytes,10,rep,name=categories,proto3" json:"categories,omitempty"`
	Interests            []string     `protobuf:"bytes,11,rep,name=interests,proto3" json:"interests,omitempty"`
	Attendees            []string     `protobuf:"bytes,12,rep,name=attendees,proto3" json:"attendees,omitempty"`
	EventTypes           []string     `protobuf:"bytes,13,rep,name=eventTypes,proto3" json:"eventTypes,omitempty"`
	Status               string       `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	IsInWishlist         string       `protobuf:"bytes,15,opt,name=is_in_wishlist,json=isInWishlist,proto3" json:"is_in_wishlist,omitempty"`
	Coordinates          *Coordinates `protobuf:"bytes,16,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	MobileApp            *MobileApp   `protobuf:"bytes,17,opt,name=mobileApp,proto3" json:"mobileApp,omitempty"`
	IsFeatured           string       `protobuf:"bytes,18,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty"`
	Deactivated          bool         `protobuf:"varint,19,opt,name=Deactivated,json=deactivated,proto3" json:"Deactivated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{10}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventDetail() *EventDetail {
	if m != nil {
		return m.EventDetail
	}
	return nil
}

func (m *Event) GetOrganizer() *Organizer {
	if m != nil {
		return m.Organizer
	}
	return nil
}

func (m *Event) GetTax() *Tax {
	if m != nil {
		return m.Tax
	}
	return nil
}

func (m *Event) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *Event) GetSpeakers() []*Speaker {
	if m != nil {
		return m.Speakers
	}
	return nil
}

func (m *Event) GetExhibitors() []*Exhibitor {
	if m != nil {
		return m.Exhibitors
	}
	return nil
}

func (m *Event) GetSponsors() []*Sponsor {
	if m != nil {
		return m.Sponsors
	}
	return nil
}

func (m *Event) GetPartners() []*Partner {
	if m != nil {
		return m.Partners
	}
	return nil
}

func (m *Event) GetSchedule() []*Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *Event) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Event) GetInterests() []string {
	if m != nil {
		return m.Interests
	}
	return nil
}

func (m *Event) GetAttendees() []string {
	if m != nil {
		return m.Attendees
	}
	return nil
}

func (m *Event) GetEventTypes() []string {
	if m != nil {
		return m.EventTypes
	}
	return nil
}

func (m *Event) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Event) GetIsInWishlist() string {
	if m != nil {
		return m.IsInWishlist
	}
	return ""
}

func (m *Event) GetCoordinates() *Coordinates {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *Event) GetMobileApp() *MobileApp {
	if m != nil {
		return m.MobileApp
	}
	return nil
}

func (m *Event) GetIsFeatured() string {
	if m != nil {
		return m.IsFeatured
	}
	return ""
}

func (m *Event) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

type Coordinates struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coordinates) Reset()         { *m = Coordinates{} }
func (m *Coordinates) String() string { return proto.CompactTextString(m) }
func (*Coordinates) ProtoMessage()    {}
func (*Coordinates) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{11}
}

func (m *Coordinates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coordinates.Unmarshal(m, b)
}
func (m *Coordinates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coordinates.Marshal(b, m, deterministic)
}
func (m *Coordinates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coordinates.Merge(m, src)
}
func (m *Coordinates) XXX_Size() int {
	return xxx_messageInfo_Coordinates.Size(m)
}
func (m *Coordinates) XXX_DiscardUnknown() {
	xxx_messageInfo_Coordinates.DiscardUnknown(m)
}

var xxx_messageInfo_Coordinates proto.InternalMessageInfo

func (m *Coordinates) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Coordinates) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type Response struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ArangoID             string   `protobuf:"bytes,2,opt,name=arangoID,proto3" json:"arangoID,omitempty"`
	ElasticId            string   `protobuf:"bytes,3,opt,name=elasticId,proto3" json:"elasticId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{12}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Response) GetArangoID() string {
	if m != nil {
		return m.ArangoID
	}
	return ""
}

func (m *Response) GetElasticId() string {
	if m != nil {
		return m.ElasticId
	}
	return ""
}

type RollbackRequest struct {
	ArangoId             string   `protobuf:"bytes,1,opt,name=arangoId,proto3" json:"arangoId,omitempty"`
	ElasticId            string   `protobuf:"bytes,2,opt,name=elasticId,proto3" json:"elasticId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackRequest) Reset()         { *m = RollbackRequest{} }
func (m *RollbackRequest) String() string { return proto.CompactTextString(m) }
func (*RollbackRequest) ProtoMessage()    {}
func (*RollbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{13}
}

func (m *RollbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackRequest.Unmarshal(m, b)
}
func (m *RollbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackRequest.Marshal(b, m, deterministic)
}
func (m *RollbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackRequest.Merge(m, src)
}
func (m *RollbackRequest) XXX_Size() int {
	return xxx_messageInfo_RollbackRequest.Size(m)
}
func (m *RollbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackRequest proto.InternalMessageInfo

func (m *RollbackRequest) GetArangoId() string {
	if m != nil {
		return m.ArangoId
	}
	return ""
}

func (m *RollbackRequest) GetElasticId() string {
	if m != nil {
		return m.ElasticId
	}
	return ""
}

type RollbackReponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackReponse) Reset()         { *m = RollbackReponse{} }
func (m *RollbackReponse) String() string { return proto.CompactTextString(m) }
func (*RollbackReponse) ProtoMessage()    {}
func (*RollbackReponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{14}
}

func (m *RollbackReponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackReponse.Unmarshal(m, b)
}
func (m *RollbackReponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackReponse.Marshal(b, m, deterministic)
}
func (m *RollbackReponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackReponse.Merge(m, src)
}
func (m *RollbackReponse) XXX_Size() int {
	return xxx_messageInfo_RollbackReponse.Size(m)
}
func (m *RollbackReponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackReponse.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackReponse proto.InternalMessageInfo

func (m *RollbackReponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type EventItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartDate            string   `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime            string   `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndDate              string   `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	VenueName            string   `protobuf:"bytes,6,opt,name=venue_name,json=venueName,proto3" json:"venue_name,omitempty"`
	VenueCity            string   `protobuf:"bytes,7,opt,name=venue_city,json=venueCity,proto3" json:"venue_city,omitempty"`
	VenueCountry         string   `protobuf:"bytes,8,opt,name=venue_country,json=venueCountry,proto3" json:"venue_country,omitempty"`
	Currency             string   `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	Price                float64  `protobuf:"fixed64,10,opt,name=price,proto3" json:"price,omitempty"`
	VisitorRegistration  string   `protobuf:"bytes,11,opt,name=visitor_registration,json=visitorRegistration,proto3" json:"visitor_registration,omitempty"`
	CoverImageUploadId   string   `protobuf:"bytes,12,opt,name=cover_image_upload_id,json=coverImageUploadId,proto3" json:"cover_image_upload_id,omitempty"`
	Status               string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Zone                 string   `protobuf:"bytes,14,opt,name=zone,proto3" json:"zone,omitempty"`
	Timezone             string   `protobuf:"bytes,15,opt,name=timezone,proto3" json:"timezone,omitempty"`
	EndTime              string   `protobuf:"bytes,16,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Tickets              int32    `protobuf:"varint,17,opt,name=tickets,proto3" json:"tickets,omitempty"`
	Sold                 int32    `protobuf:"varint,18,opt,name=sold,proto3" json:"sold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventItem) Reset()         { *m = EventItem{} }
func (m *EventItem) String() string { return proto.CompactTextString(m) }
func (*EventItem) ProtoMessage()    {}
func (*EventItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{15}
}

func (m *EventItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventItem.Unmarshal(m, b)
}
func (m *EventItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventItem.Marshal(b, m, deterministic)
}
func (m *EventItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventItem.Merge(m, src)
}
func (m *EventItem) XXX_Size() int {
	return xxx_messageInfo_EventItem.Size(m)
}
func (m *EventItem) XXX_DiscardUnknown() {
	xxx_messageInfo_EventItem.DiscardUnknown(m)
}

var xxx_messageInfo_EventItem proto.InternalMessageInfo

func (m *EventItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventItem) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *EventItem) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *EventItem) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *EventItem) GetVenueName() string {
	if m != nil {
		return m.VenueName
	}
	return ""
}

func (m *EventItem) GetVenueCity() string {
	if m != nil {
		return m.VenueCity
	}
	return ""
}

func (m *EventItem) GetVenueCountry() string {
	if m != nil {
		return m.VenueCountry
	}
	return ""
}

func (m *EventItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *EventItem) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *EventItem) GetVisitorRegistration() string {
	if m != nil {
		return m.VisitorRegistration
	}
	return ""
}

func (m *EventItem) GetCoverImageUploadId() string {
	if m != nil {
		return m.CoverImageUploadId
	}
	return ""
}

func (m *EventItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *EventItem) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *EventItem) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *EventItem) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *EventItem) GetTickets() int32 {
	if m != nil {
		return m.Tickets
	}
	return 0
}

func (m *EventItem) GetSold() int32 {
	if m != nil {
		return m.Sold
	}
	return 0
}

type ManageEventResponse struct {
	Name                      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartDate                 string   `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime                 string   `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Price                     float64  `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Sold                      int32    `protobuf:"varint,5,opt,name=sold,proto3" json:"sold,omitempty"`
	Quantity                  int32    `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	VenueName                 string   `protobuf:"bytes,7,opt,name=venue_name,json=venueName,proto3" json:"venue_name,omitempty"`
	VenueCity                 string   `protobuf:"bytes,8,opt,name=venue_city,json=venueCity,proto3" json:"venue_city,omitempty"`
	CoverImageUploadId        string   `protobuf:"bytes,9,opt,name=cover_image_upload_id,json=coverImageUploadId,proto3" json:"cover_image_upload_id,omitempty"`
	Currency                  string   `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	AllowVisitorRegistrations string   `protobuf:"bytes,11,opt,name=allow_visitor_registrations,json=allowVisitorRegistrations,proto3" json:"allow_visitor_registrations,omitempty"`
	Status                    string   `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	Visitors                  int32    `protobuf:"varint,13,opt,name=visitors,proto3" json:"visitors,omitempty"`
	TicketStartTime           string   `protobuf:"bytes,14,opt,name=ticket_start_time,json=ticketStartTime,proto3" json:"ticket_start_time,omitempty"`
	TicketStartDate           string   `protobuf:"bytes,15,opt,name=ticket_start_date,json=ticketStartDate,proto3" json:"ticket_start_date,omitempty"`
	TicketEndTime             string   `protobuf:"bytes,16,opt,name=ticket_end_time,json=ticketEndTime,proto3" json:"ticket_end_time,omitempty"`
	TicketEndDate             string   `protobuf:"bytes,17,opt,name=ticket_end_date,json=ticketEndDate,proto3" json:"ticket_end_date,omitempty"`
	TimeZone                  string   `protobuf:"bytes,18,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	EventStatus               string   `protobuf:"bytes,19,opt,name=event_status,json=eventStatus,proto3" json:"event_status,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *ManageEventResponse) Reset()         { *m = ManageEventResponse{} }
func (m *ManageEventResponse) String() string { return proto.CompactTextString(m) }
func (*ManageEventResponse) ProtoMessage()    {}
func (*ManageEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{16}
}

func (m *ManageEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManageEventResponse.Unmarshal(m, b)
}
func (m *ManageEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManageEventResponse.Marshal(b, m, deterministic)
}
func (m *ManageEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManageEventResponse.Merge(m, src)
}
func (m *ManageEventResponse) XXX_Size() int {
	return xxx_messageInfo_ManageEventResponse.Size(m)
}
func (m *ManageEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ManageEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ManageEventResponse proto.InternalMessageInfo

func (m *ManageEventResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ManageEventResponse) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *ManageEventResponse) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ManageEventResponse) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ManageEventResponse) GetSold() int32 {
	if m != nil {
		return m.Sold
	}
	return 0
}

func (m *ManageEventResponse) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *ManageEventResponse) GetVenueName() string {
	if m != nil {
		return m.VenueName
	}
	return ""
}

func (m *ManageEventResponse) GetVenueCity() string {
	if m != nil {
		return m.VenueCity
	}
	return ""
}

func (m *ManageEventResponse) GetCoverImageUploadId() string {
	if m != nil {
		return m.CoverImageUploadId
	}
	return ""
}

func (m *ManageEventResponse) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ManageEventResponse) GetAllowVisitorRegistrations() string {
	if m != nil {
		return m.AllowVisitorRegistrations
	}
	return ""
}

func (m *ManageEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ManageEventResponse) GetVisitors() int32 {
	if m != nil {
		return m.Visitors
	}
	return 0
}

func (m *ManageEventResponse) GetTicketStartTime() string {
	if m != nil {
		return m.TicketStartTime
	}
	return ""
}

func (m *ManageEventResponse) GetTicketStartDate() string {
	if m != nil {
		return m.TicketStartDate
	}
	return ""
}

func (m *ManageEventResponse) GetTicketEndTime() string {
	if m != nil {
		return m.TicketEndTime
	}
	return ""
}

func (m *ManageEventResponse) GetTicketEndDate() string {
	if m != nil {
		return m.TicketEndDate
	}
	return ""
}

func (m *ManageEventResponse) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *ManageEventResponse) GetEventStatus() string {
	if m != nil {
		return m.EventStatus
	}
	return ""
}

type EventRequest struct {
	EventId              string   `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{17}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *EventRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type UpdateRequest struct {
	EventId              string   `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Event                *Event   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{18}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *UpdateRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type UpdateResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{19}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type AnyResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnyResponse) Reset()         { *m = AnyResponse{} }
func (m *AnyResponse) String() string { return proto.CompactTextString(m) }
func (*AnyResponse) ProtoMessage()    {}
func (*AnyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{20}
}

func (m *AnyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnyResponse.Unmarshal(m, b)
}
func (m *AnyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnyResponse.Marshal(b, m, deterministic)
}
func (m *AnyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnyResponse.Merge(m, src)
}
func (m *AnyResponse) XXX_Size() int {
	return xxx_messageInfo_AnyResponse.Size(m)
}
func (m *AnyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnyResponse proto.InternalMessageInfo

func (m *AnyResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AnyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateFeaturedRequest struct {
	EventId              string   `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Featured             string   `protobuf:"bytes,2,opt,name=featured,proto3" json:"featured,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFeaturedRequest) Reset()         { *m = UpdateFeaturedRequest{} }
func (m *UpdateFeaturedRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateFeaturedRequest) ProtoMessage()    {}
func (*UpdateFeaturedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{21}
}

func (m *UpdateFeaturedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFeaturedRequest.Unmarshal(m, b)
}
func (m *UpdateFeaturedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFeaturedRequest.Marshal(b, m, deterministic)
}
func (m *UpdateFeaturedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFeaturedRequest.Merge(m, src)
}
func (m *UpdateFeaturedRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateFeaturedRequest.Size(m)
}
func (m *UpdateFeaturedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFeaturedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFeaturedRequest proto.InternalMessageInfo

func (m *UpdateFeaturedRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *UpdateFeaturedRequest) GetFeatured() string {
	if m != nil {
		return m.Featured
	}
	return ""
}

func init() {
	proto.RegisterType((*EventDetail)(nil), "event.EventDetail")
	proto.RegisterType((*Organizer)(nil), "event.Organizer")
	proto.RegisterType((*Tax)(nil), "event.Tax")
	proto.RegisterType((*Ticket)(nil), "event.Ticket")
	proto.RegisterType((*Schedule)(nil), "event.Schedule")
	proto.RegisterType((*Speaker)(nil), "event.Speaker")
	proto.RegisterType((*Exhibitor)(nil), "event.Exhibitor")
	proto.RegisterType((*Sponsor)(nil), "event.Sponsor")
	proto.RegisterType((*Partner)(nil), "event.Partner")
	proto.RegisterType((*MobileApp)(nil), "event.MobileApp")
	proto.RegisterType((*Event)(nil), "event.Event")
	proto.RegisterType((*Coordinates)(nil), "event.Coordinates")
	proto.RegisterType((*Response)(nil), "event.Response")
	proto.RegisterType((*RollbackRequest)(nil), "event.RollbackRequest")
	proto.RegisterType((*RollbackReponse)(nil), "event.RollbackReponse")
	proto.RegisterType((*EventItem)(nil), "event.EventItem")
	proto.RegisterType((*ManageEventResponse)(nil), "event.ManageEventResponse")
	proto.RegisterType((*EventRequest)(nil), "event.EventRequest")
	proto.RegisterType((*UpdateRequest)(nil), "event.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "event.UpdateResponse")
	proto.RegisterType((*AnyResponse)(nil), "event.AnyResponse")
	proto.RegisterType((*UpdateFeaturedRequest)(nil), "event.UpdateFeaturedRequest")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 2053 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xdd, 0x6e, 0xdb, 0xc8,
	0x15, 0x86, 0x2c, 0x4b, 0xa2, 0x0e, 0x65, 0xcb, 0x9e, 0xd8, 0x09, 0x63, 0x27, 0x6b, 0x87, 0x4d,
	0xdb, 0x74, 0xb7, 0x48, 0xd7, 0xee, 0xa2, 0x28, 0x8a, 0x76, 0x8b, 0x38, 0x76, 0x0b, 0xa3, 0x58,
	0xef, 0x82, 0x76, 0xb6, 0x40, 0x51, 0x80, 0x18, 0x89, 0x13, 0x7b, 0x10, 0x8a, 0x54, 0x38, 0x23,
	0xc7, 0xda, 0xab, 0x3e, 0x44, 0xd1, 0xe7, 0xe8, 0x03, 0xb4, 0xf7, 0xbd, 0xe8, 0xf3, 0x14, 0xbd,
	0x2c, 0xe6, 0xcc, 0x70, 0x38, 0xa4, 0x2d, 0x39, 0x8b, 0xde, 0xf1, 0xfc, 0x72, 0xce, 0x9c, 0xbf,
	0x8f, 0x04, 0x9f, 0x5d, 0xb3, 0x4c, 0xbe, 0x9c, 0x16, 0xb9, 0xcc, 0x49, 0x07, 0x89, 0xf0, 0x3f,
	0x1e, 0xf8, 0x27, 0xea, 0xe9, 0x98, 0x49, 0xca, 0x53, 0xb2, 0x0e, 0x2b, 0x3c, 0x09, 0x5a, 0xfb,
	0xad, 0x17, 0xfd, 0x68, 0x85, 0x27, 0x84, 0xc0, 0x6a, 0x46, 0x27, 0x2c, 0x58, 0x41, 0x0e, 0x3e,
	0x93, 0xcf, 0x60, 0x73, 0x54, 0x70, 0xf6, 0x36, 0x4e, 0x98, 0x18, 0x17, 0x7c, 0x2a, 0x79, 0x9e,
	0x05, 0x6d, 0x54, 0xd8, 0x40, 0xc1, 0x71, 0xc5, 0x27, 0x4f, 0x01, 0x84, 0xa4, 0x85, 0x8c, 0x13,
	0x2a, 0x59, 0xb0, 0x8a, 0x5a, 0x7d, 0xe4, 0x1c, 0x53, 0xc9, 0x2a, 0xb1, 0xe4, 0x13, 0x16, 0x74,
	0x1c, 0xf1, 0x05, 0x9f, 0x30, 0xf2, 0x18, 0x3c, 0x96, 0x25, 0xda, 0xb6, 0x8b, 0xc2, 0x1e, 0xcb,
	0x12, 0xb4, 0x34, 0x22, 0xb4, 0xeb, 0x59, 0x11, 0x5a, 0x3d, 0x05, 0xb8, 0x66, 0xd9, 0x8c, 0xc5,
	0x78, 0x74, 0x4f, 0x3b, 0x45, 0xce, 0x99, 0x3a, 0x7f, 0x00, 0x3d, 0x9a, 0x24, 0x05, 0x13, 0x22,
	0xe8, 0x6b, 0x43, 0x43, 0x92, 0x5d, 0xe8, 0x9b, 0xc7, 0xf8, 0x30, 0x00, 0x94, 0x79, 0x86, 0x71,
	0x58, 0x79, 0x1d, 0x73, 0x39, 0x0f, 0x7c, 0xc7, 0xeb, 0x6b, 0x2e, 0xe7, 0xe4, 0x07, 0xb0, 0x66,
	0xc4, 0xf9, 0x2c, 0x93, 0xc5, 0x3c, 0x18, 0xa0, 0xc6, 0x40, 0x6b, 0x68, 0x1e, 0xd9, 0x03, 0x5f,
	0x2b, 0x09, 0xa9, 0x42, 0x5a, 0x43, 0x15, 0xed, 0xf6, 0x5c, 0x71, 0xc8, 0x01, 0x6c, 0x8f, 0xf3,
	0x6b, 0x56, 0xc4, 0x7c, 0x42, 0x2f, 0x59, 0x3c, 0x9b, 0xa6, 0x39, 0x4d, 0x62, 0x9e, 0x04, 0x43,
	0x54, 0x25, 0x28, 0x3c, 0x55, 0xb2, 0x37, 0x28, 0x3a, 0x4d, 0xc8, 0x16, 0x74, 0x24, 0x97, 0x29,
	0x0b, 0x36, 0x50, 0x45, 0x13, 0xe4, 0x00, 0xb6, 0x12, 0x4c, 0x29, 0x4b, 0x6a, 0x79, 0xda, 0x44,
	0xa5, 0x07, 0xa5, 0xac, 0x91, 0x2a, 0x2c, 0x8a, 0x58, 0xd2, 0x4b, 0x11, 0x3c, 0xd0, 0x01, 0x22,
	0xe7, 0x82, 0x5e, 0x0a, 0x75, 0xe1, 0x93, 0xb9, 0x78, 0x9f, 0xaa, 0xd3, 0x6c, 0xe9, 0x7b, 0x43,
	0xfa, 0x34, 0x21, 0x8f, 0xa0, 0x37, 0x13, 0xea, 0xd0, 0x49, 0xb0, 0x8d, 0x92, 0xae, 0x22, 0x4f,
	0x13, 0xf2, 0x63, 0x18, 0x56, 0xe9, 0x15, 0x92, 0x4e, 0xa6, 0xc1, 0x43, 0x54, 0x58, 0xb7, 0x39,
	0x46, 0xae, 0xba, 0xbd, 0x32, 0x9b, 0x5a, 0xed, 0x91, 0xbe, 0x3d, 0x93, 0x52, 0xad, 0xb4, 0x03,
	0x9e, 0x52, 0xf8, 0x2e, 0xcf, 0x58, 0x10, 0xe8, 0xec, 0x94, 0xb4, 0x2a, 0x54, 0xe4, 0x3f, 0xd6,
	0x85, 0x8a, 0xbc, 0x3d, 0xf0, 0xb9, 0x88, 0xdf, 0x32, 0x2a, 0x67, 0x05, 0x4b, 0x82, 0x9d, 0xfd,
	0xd6, 0x0b, 0x2f, 0x02, 0x2e, 0x7e, 0x67, 0x38, 0x2a, 0xe2, 0x71, 0xc1, 0xa8, 0x64, 0x49, 0x9c,
	0x67, 0xc1, 0xae, 0x8e, 0xd8, 0x70, 0xbe, 0xce, 0xd4, 0xfb, 0xde, 0xb1, 0xf9, 0x87, 0xbc, 0x48,
	0x44, 0xf0, 0x64, 0xbf, 0xad, 0xde, 0x57, 0xd2, 0xe4, 0x0b, 0x78, 0x48, 0xd3, 0x34, 0xff, 0x10,
	0x8b, 0x69, 0x9e, 0x89, 0xbc, 0x88, 0x59, 0xf6, 0x7e, 0xc6, 0x0b, 0x26, 0x82, 0xa7, 0xe8, 0x66,
	0x0b, 0xa5, 0xe7, 0x5a, 0x78, 0x62, 0x64, 0xe4, 0x97, 0x10, 0x68, 0x2b, 0x76, 0x73, 0xc5, 0x47,
	0x5c, 0xba, 0x76, 0x9f, 0xa0, 0x9d, 0xf6, 0x7a, 0x52, 0x8a, 0xad, 0xe5, 0x2f, 0xe0, 0x91, 0xb6,
	0x1c, 0x15, 0xf9, 0xf8, 0x6a, 0x56, 0xb0, 0xca, 0x70, 0x0f, 0x0d, 0xb7, 0x51, 0x7c, 0x64, 0xa4,
	0xd6, 0xee, 0x18, 0xf6, 0xdc, 0x82, 0x92, 0x57, 0xb3, 0xc9, 0x28, 0xa3, 0x3c, 0x75, 0x4a, 0x6b,
	0x1f, 0xed, 0x77, 0xab, 0xd2, 0xba, 0x28, 0x95, 0x6c, 0x8d, 0xfd, 0x0c, 0xb6, 0xde, 0xa6, 0x79,
	0x5e, 0xc4, 0xd3, 0x94, 0x66, 0x8e, 0xe9, 0x33, 0x34, 0xdd, 0x44, 0xd9, 0x37, 0x29, 0xcd, 0xac,
	0xc1, 0x9e, 0x99, 0x36, 0xf1, 0x35, 0x4f, 0x58, 0x1e, 0x84, 0xba, 0xd0, 0x91, 0xf5, 0xad, 0xe2,
	0x84, 0xff, 0x6e, 0x41, 0xff, 0xeb, 0xe2, 0x92, 0x66, 0xfc, 0x3b, 0x56, 0xd8, 0x31, 0xd3, 0x72,
	0xc6, 0xcc, 0x3e, 0xf8, 0x6e, 0xe1, 0xea, 0x09, 0xe4, 0xb2, 0x54, 0x23, 0x7f, 0x60, 0x23, 0xc1,
	0x25, 0x33, 0xe3, 0xa7, 0x24, 0xcd, 0x18, 0x5b, 0xb5, 0x63, 0xec, 0x21, 0x74, 0x55, 0xc7, 0xcd,
	0x84, 0x19, 0x31, 0x86, 0x52, 0x0d, 0x5f, 0x05, 0xa3, 0x07, 0x8c, 0x37, 0x2b, 0x63, 0xf8, 0x14,
	0x36, 0x99, 0x8c, 0xc7, 0xf9, 0x64, 0xc2, 0x05, 0xcf, 0xb3, 0xb8, 0x50, 0x2d, 0xab, 0x46, 0x4d,
	0x2b, 0x1a, 0x32, 0xf9, 0xba, 0xe4, 0x47, 0x54, 0xb2, 0xf0, 0x1f, 0x2d, 0x68, 0x5f, 0xd0, 0x1b,
	0xd5, 0x24, 0x92, 0xde, 0xc4, 0x4e, 0x30, 0x3d, 0x49, 0x6f, 0x70, 0xec, 0x18, 0x11, 0x7a, 0x59,
	0xb1, 0x22, 0x65, 0x4d, 0xb6, 0xa1, 0xab, 0x44, 0x3c, 0x31, 0x71, 0x74, 0x24, 0xbd, 0x39, 0x4d,
	0xc8, 0x33, 0x18, 0x98, 0x61, 0xa2, 0x1d, 0xea, 0x78, 0x7c, 0xc3, 0x43, 0xa7, 0xcf, 0x61, 0x5d,
	0x5c, 0xe5, 0xb3, 0x34, 0x89, 0x69, 0x92, 0xc4, 0x92, 0xde, 0x98, 0x00, 0x07, 0x9a, 0xfb, 0x2a,
	0x49, 0xd4, 0xa9, 0x54, 0x23, 0x64, 0xe3, 0x74, 0x96, 0x30, 0x54, 0xe9, 0x9a, 0x46, 0xd0, 0xac,
	0x0b, 0x7a, 0x13, 0xfe, 0xbd, 0x0d, 0xdd, 0x0b, 0x3e, 0x7e, 0xc7, 0xe4, 0x9d, 0xa9, 0xd8, 0x01,
	0xef, 0xfd, 0x8c, 0x66, 0x52, 0x0d, 0x3e, 0x75, 0xf4, 0x4e, 0x64, 0x69, 0x35, 0x7e, 0xa6, 0x05,
	0x1f, 0xeb, 0x14, 0xb4, 0x22, 0x4d, 0x28, 0x8b, 0xf1, 0xac, 0x28, 0x58, 0x36, 0x9e, 0x9b, 0x63,
	0x5b, 0xba, 0xb1, 0x12, 0x3a, 0xcb, 0x57, 0x42, 0x77, 0xd9, 0x4a, 0xe8, 0x2d, 0x5e, 0x09, 0x5e,
	0x7d, 0x25, 0x7c, 0x09, 0xbb, 0xba, 0x7d, 0xae, 0xb9, 0xc0, 0xb6, 0x2b, 0xd8, 0x25, 0x17, 0xb2,
	0xa0, 0xaa, 0x90, 0xca, 0x3d, 0xf0, 0x18, 0x55, 0xbe, 0xd5, 0x1a, 0x91, 0xab, 0xa0, 0x6e, 0x45,
	0xe4, 0x69, 0x82, 0x4b, 0xa1, 0x13, 0xe1, 0xf3, 0x5d, 0xc3, 0xcd, 0xff, 0xb8, 0xe1, 0x36, 0xb8,
	0x67, 0xb8, 0xad, 0x2d, 0x18, 0x6e, 0xeb, 0xd5, 0x70, 0x53, 0x0d, 0xe4, 0x9d, 0x8f, 0xaf, 0x58,
	0x32, 0x4b, 0xd9, 0xad, 0xb5, 0x6d, 0x77, 0xc2, 0x8a, 0xbb, 0x13, 0x1a, 0x1d, 0xd5, 0xbe, 0xdd,
	0x51, 0x21, 0x0c, 0xf0, 0xec, 0x27, 0xfa, 0x46, 0x4d, 0xea, 0x6a, 0x3c, 0xd5, 0x75, 0x62, 0xca,
	0xe8, 0x3b, 0x56, 0x98, 0xdc, 0x95, 0xa4, 0x7a, 0x2b, 0xae, 0x32, 0x93, 0x34, 0x4d, 0x90, 0xe7,
	0xb0, 0x26, 0xcc, 0x39, 0x2f, 0xf0, 0x4c, 0x3a, 0x6b, 0x75, 0x66, 0xf8, 0xaf, 0x16, 0xf4, 0xce,
	0x8d, 0x9f, 0x66, 0x34, 0x4f, 0xa0, 0xff, 0x96, 0x17, 0x42, 0x9e, 0x55, 0x48, 0xa4, 0x62, 0xa8,
	0x8b, 0x4b, 0xa9, 0x11, 0xea, 0x90, 0x2c, 0xad, 0x64, 0xd3, 0x5c, 0x70, 0x0c, 0xd7, 0x94, 0x61,
	0x49, 0xab, 0x38, 0xc6, 0xf9, 0x64, 0x4a, 0xb3, 0x79, 0x19, 0x87, 0x21, 0x9b, 0xf7, 0xd4, 0xbd,
	0x7d, 0x4f, 0xb5, 0xb9, 0xd1, 0xab, 0xcf, 0x0d, 0x1c, 0x6d, 0x76, 0x80, 0xdf, 0x0a, 0xc6, 0x79,
	0xed, 0xca, 0xad, 0xd7, 0x8e, 0xf2, 0x5c, 0x5e, 0x9d, 0xcd, 0x26, 0x23, 0x56, 0x94, 0xe9, 0x71,
	0x58, 0xee, 0xc0, 0x5b, 0xad, 0x0f, 0x3c, 0xd5, 0x6f, 0x54, 0xb2, 0xcb, 0xbc, 0x28, 0xa3, 0xb1,
	0xf4, 0xff, 0x1b, 0xce, 0x5f, 0x30, 0x33, 0xb8, 0xc7, 0xbe, 0x47, 0x30, 0x8b, 0x67, 0xf3, 0x16,
	0x74, 0xd8, 0x84, 0xf2, 0xd4, 0x84, 0xa0, 0x89, 0xfa, 0x11, 0x3a, 0x77, 0x1c, 0xe1, 0x1b, 0x5a,
	0xc8, 0x8c, 0x7d, 0x9f, 0x23, 0xd8, 0x17, 0xb5, 0xdd, 0x17, 0x2d, 0xbe, 0xc3, 0x65, 0xcb, 0x20,
	0xfc, 0x0d, 0xf4, 0xbf, 0xca, 0x47, 0x3c, 0x65, 0xaf, 0xa6, 0x53, 0x55, 0x90, 0x74, 0xc2, 0x32,
	0x2e, 0x39, 0x13, 0xe6, 0x28, 0x15, 0x43, 0x75, 0xeb, 0x15, 0x4b, 0xa7, 0x25, 0x66, 0x56, 0xcf,
	0xe1, 0x7f, 0x3b, 0xd0, 0x41, 0x9c, 0x4d, 0xbe, 0x30, 0x9b, 0x51, 0x03, 0x6e, 0xb4, 0xf6, 0x0f,
	0xc9, 0x4b, 0x8d, 0xcd, 0x1d, 0x28, 0x1e, 0xb9, 0x6a, 0xe4, 0x25, 0xf4, 0xf3, 0x72, 0x5b, 0xa2,
	0x63, 0xff, 0x70, 0xc3, 0xd8, 0xd8, 0x2d, 0x1a, 0x55, 0x2a, 0xe4, 0x09, 0xb4, 0xd5, 0xa4, 0x6f,
	0xa3, 0x26, 0x18, 0xcd, 0x0b, 0x7a, 0x13, 0x29, 0x36, 0xf9, 0x21, 0x74, 0x25, 0x4e, 0x7b, 0xbc,
	0x02, 0xff, 0x70, 0xad, 0x54, 0x40, 0x66, 0x64, 0x84, 0xe4, 0x53, 0xf0, 0x4c, 0x6b, 0xab, 0xbd,
	0xd9, 0x7e, 0xe1, 0x1f, 0xae, 0x1b, 0x45, 0xd3, 0xa9, 0x91, 0x95, 0x93, 0xcf, 0x01, 0x2c, 0xa6,
	0x11, 0x41, 0x17, 0xb5, 0xcb, 0x13, 0xda, 0x66, 0x88, 0x1c, 0x1d, 0xed, 0x1d, 0xcb, 0x4a, 0x04,
	0xbd, 0x86, 0x77, 0x64, 0x47, 0x56, 0xae, 0x74, 0xa7, 0x3a, 0xff, 0x22, 0xf0, 0x6a, 0xba, 0xa6,
	0x2c, 0x22, 0x2b, 0x27, 0x9f, 0x81, 0x57, 0x8e, 0x96, 0xa0, 0x8f, 0xba, 0xc3, 0xd2, 0xaf, 0x61,
	0x47, 0x56, 0x81, 0x7c, 0x02, 0x60, 0xfa, 0x44, 0xa5, 0x12, 0x10, 0xe4, 0x39, 0x1c, 0x95, 0x69,
	0x9e, 0x49, 0x56, 0x30, 0x21, 0x45, 0xe0, 0xa3, 0xb8, 0x62, 0x60, 0x1d, 0x48, 0xc9, 0xb2, 0x84,
	0x31, 0x11, 0x0c, 0xb4, 0xd4, 0x32, 0x94, 0x6f, 0x8d, 0x9e, 0xe7, 0x53, 0x26, 0x82, 0x35, 0xed,
	0xbb, 0xe2, 0x38, 0xa0, 0x64, 0xbd, 0x06, 0x4a, 0x9e, 0xc3, 0x3a, 0x17, 0x31, 0xcf, 0xe2, 0x0f,
	0x5c, 0x5c, 0xa5, 0x5c, 0x48, 0x03, 0xfe, 0x07, 0x5c, 0x9c, 0x66, 0x7f, 0x34, 0x3c, 0x55, 0x47,
	0xe3, 0x3c, 0x2f, 0x12, 0x9e, 0x51, 0xc9, 0x04, 0x82, 0xff, 0xaa, 0x8e, 0x5e, 0x57, 0x92, 0xc8,
	0x55, 0x53, 0x75, 0x34, 0x29, 0xcb, 0x18, 0xbf, 0x05, 0xaa, 0x2c, 0xd9, 0xf2, 0x8e, 0x2a, 0x95,
	0x26, 0x84, 0x26, 0x1a, 0xc7, 0x39, 0x10, 0x7a, 0x1f, 0xfc, 0x63, 0x46, 0xc7, 0x92, 0x5f, 0x2b,
	0xd0, 0x8c, 0x5f, 0x0d, 0x9e, 0x1a, 0x2e, 0x96, 0x15, 0x1e, 0x80, 0xef, 0x1c, 0x87, 0x6c, 0x40,
	0x3b, 0xa5, 0x12, 0xeb, 0xbe, 0x15, 0xa9, 0x47, 0xe4, 0x18, 0x80, 0xa7, 0x38, 0x79, 0x16, 0xfe,
	0x19, 0xbc, 0x88, 0x61, 0xf2, 0x99, 0x73, 0x4b, 0xad, 0xda, 0x2d, 0xed, 0x80, 0x47, 0x0b, 0x9a,
	0x5d, 0xe6, 0xa7, 0xc7, 0xa6, 0xd3, 0x2c, 0xad, 0xf2, 0xc2, 0xd4, 0x0e, 0xe0, 0xe3, 0xd3, 0x12,
	0x52, 0x55, 0x8c, 0xf0, 0x0f, 0x30, 0x8c, 0xf2, 0x34, 0x1d, 0xd1, 0xf1, 0xbb, 0x88, 0xbd, 0x9f,
	0x31, 0x21, 0x1d, 0x67, 0xe5, 0x68, 0xb1, 0x74, 0xdd, 0xd9, 0x4a, 0xd3, 0xd9, 0x4f, 0x5c, 0x67,
	0x4b, 0x4f, 0x1c, 0xfe, 0x75, 0x15, 0xfa, 0xd8, 0xe0, 0xa7, 0x92, 0x4d, 0x3e, 0xea, 0x4b, 0xbb,
	0x8e, 0x94, 0xda, 0xcb, 0x91, 0xd2, 0xea, 0x32, 0xa4, 0xd4, 0xa9, 0x23, 0xa5, 0xfa, 0x17, 0x72,
	0xb7, 0xf9, 0x85, 0x5c, 0xff, 0xd4, 0xed, 0xdd, 0xfb, 0xa9, 0xeb, 0xdd, 0xf1, 0xa9, 0xeb, 0x22,
	0xc0, 0x7e, 0x03, 0x01, 0x5a, 0xcc, 0x08, 0x2e, 0x66, 0x3c, 0x80, 0xad, 0xbb, 0xd0, 0x99, 0x01,
	0x55, 0x0f, 0xae, 0x6f, 0xe3, 0xb2, 0xc5, 0x9f, 0xcb, 0x83, 0x85, 0x9f, 0xcb, 0x55, 0x76, 0xd6,
	0x6a, 0xf5, 0x74, 0x07, 0xc6, 0xaa, 0x61, 0xb2, 0x61, 0x03, 0x93, 0xb9, 0x60, 0x73, 0xa3, 0x0e,
	0x36, 0x03, 0xe8, 0xe9, 0x09, 0x2a, 0xb0, 0xc5, 0x3a, 0x51, 0x49, 0x5a, 0x18, 0x49, 0x2a, 0x18,
	0x19, 0xfe, 0xad, 0x03, 0x0f, 0xbe, 0xa2, 0x19, 0xbd, 0x64, 0x58, 0x1c, 0xb6, 0xf0, 0xef, 0x02,
	0xe2, 0xf5, 0x82, 0x58, 0x59, 0x5e, 0x10, 0xed, 0x66, 0x41, 0xd8, 0x6b, 0x5f, 0x75, 0xaf, 0xbd,
	0x3c, 0x53, 0xc7, 0x81, 0xb6, 0x2e, 0xe0, 0xef, 0x36, 0x00, 0x7f, 0xbd, 0x76, 0x7a, 0xcb, 0x6b,
	0xc7, 0x6b, 0xd6, 0xce, 0xc2, 0x8c, 0xf5, 0x17, 0x66, 0xcc, 0xad, 0x24, 0x68, 0x54, 0xd2, 0x3d,
	0xb8, 0xde, 0xbf, 0x0f, 0xd7, 0x57, 0xd5, 0x30, 0x68, 0x4e, 0x17, 0xe3, 0x51, 0xd7, 0x49, 0x27,
	0xb2, 0xb4, 0xfa, 0x2e, 0xd4, 0xf9, 0x8c, 0x9d, 0xcb, 0xd6, 0x65, 0x33, 0xd4, 0x82, 0x73, 0x7b,
	0xe5, 0x4d, 0x5d, 0xcc, 0xdb, 0xf0, 0x96, 0x2e, 0x66, 0xef, 0x47, 0x60, 0x58, 0x71, 0xa3, 0xb0,
	0xd6, 0x34, 0xfb, 0xc4, 0x94, 0x57, 0x5d, 0x0f, 0x3d, 0x6e, 0x36, 0xf4, 0xd0, 0xdf, 0x2e, 0xf4,
	0x95, 0x93, 0x18, 0xcb, 0x97, 0x54, 0xe5, 0xfb, 0x27, 0x55, 0xbe, 0xcf, 0x60, 0xa0, 0x3f, 0xd0,
	0x4d, 0xf8, 0xfa, 0x77, 0x8f, 0xc6, 0x1c, 0xe7, 0x7a, 0x5e, 0x1d, 0xc1, 0xc0, 0x54, 0xa4, 0x1e,
	0x92, 0xaa, 0xe2, 0xd1, 0xc4, 0xce, 0xad, 0x1e, 0xd2, 0xf5, 0x1f, 0x40, 0x2b, 0xee, 0x0f, 0xa0,
	0xf0, 0x0c, 0xd6, 0xde, 0x4c, 0xd5, 0x11, 0x3f, 0xc2, 0x49, 0x08, 0xfa, 0xa7, 0xa4, 0xc1, 0x37,
	0x03, 0x17, 0x13, 0x45, 0xe6, 0x7f, 0xe5, 0x0b, 0x58, 0x2f, 0xfd, 0x2d, 0xdf, 0x0f, 0xe1, 0x6f,
	0xc1, 0x7f, 0x95, 0xcd, 0xef, 0x5d, 0x23, 0x01, 0xf4, 0x26, 0x4c, 0x08, 0x7a, 0x69, 0x3f, 0xca,
	0x0d, 0x19, 0x9e, 0xc1, 0xb6, 0x7e, 0x55, 0xb9, 0xeb, 0x3e, 0x22, 0x84, 0x1d, 0xf0, 0xec, 0xae,
	0x34, 0x4b, 0xa9, 0xa4, 0x0f, 0xff, 0xd9, 0x36, 0xf7, 0x79, 0xce, 0x8a, 0x6b, 0xd5, 0x78, 0x3f,
	0x05, 0xff, 0x35, 0xfe, 0x6b, 0xd2, 0xc0, 0xb0, 0x16, 0xef, 0x4e, 0x89, 0x59, 0x6c, 0x00, 0xbf,
	0x02, 0xaf, 0x5c, 0x34, 0xe4, 0x61, 0x29, 0xac, 0xaf, 0xb1, 0x9d, 0xdb, 0x7c, 0x6d, 0xfb, 0x6b,
	0xd8, 0xfc, 0x3d, 0x93, 0xe8, 0x58, 0x1c, 0xcd, 0xdf, 0xe8, 0x7f, 0x73, 0x0f, 0x6a, 0xf7, 0x6b,
	0x3c, 0x6c, 0xb8, 0x4c, 0xb5, 0xa7, 0x3e, 0x6f, 0x91, 0x03, 0x18, 0x94, 0xd6, 0x47, 0xf3, 0x45,
	0x86, 0xb5, 0xd3, 0x93, 0x2f, 0x61, 0xa8, 0xef, 0xae, 0xb2, 0xda, 0x32, 0x0a, 0xb5, 0x72, 0xd8,
	0xd9, 0x6e, 0x70, 0x4d, 0xb0, 0x47, 0x30, 0x74, 0x46, 0xe2, 0xe2, 0xb7, 0xee, 0x94, 0xd8, 0xe5,
	0x8e, 0xf9, 0x79, 0x06, 0x8f, 0xea, 0xf9, 0xab, 0x7c, 0x3d, 0xa9, 0xbd, 0xb5, 0x91, 0xdf, 0x05,
	0x67, 0x1a, 0x75, 0xf1, 0xc7, 0xf9, 0xcf, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xa6, 0xe6,
	0xc7, 0x47, 0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	CreateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Response, error)
	Rollback(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackReponse, error)
	GetEventsByUserId(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (EventService_GetEventsByUserIdClient, error)
	GetEventById(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*Event, error)
	UpdateEventById(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	ManageEventById(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*ManageEventResponse, error)
	UpdateFeaturedEventById(ctx context.Context, in *UpdateFeaturedRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) CreateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/event.EventService/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) Rollback(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackReponse, error) {
	out := new(RollbackReponse)
	err := c.cc.Invoke(ctx, "/event.EventService/Rollback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetEventsByUserId(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (EventService_GetEventsByUserIdClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventService_serviceDesc.Streams[0], "/event.EventService/GetEventsByUserId", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventServiceGetEventsByUserIdClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventService_GetEventsByUserIdClient interface {
	Recv() (*EventItem, error)
	grpc.ClientStream
}

type eventServiceGetEventsByUserIdClient struct {
	grpc.ClientStream
}

func (x *eventServiceGetEventsByUserIdClient) Recv() (*EventItem, error) {
	m := new(EventItem)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventServiceClient) GetEventById(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/event.EventService/GetEventById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) UpdateEventById(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/event.EventService/UpdateEventById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) ManageEventById(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*ManageEventResponse, error) {
	out := new(ManageEventResponse)
	err := c.cc.Invoke(ctx, "/event.EventService/ManageEventById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) UpdateFeaturedEventById(ctx context.Context, in *UpdateFeaturedRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/event.EventService/UpdateFeaturedEventById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	CreateEvent(context.Context, *Event) (*Response, error)
	Rollback(context.Context, *RollbackRequest) (*RollbackReponse, error)
	GetEventsByUserId(*EventRequest, EventService_GetEventsByUserIdServer) error
	GetEventById(context.Context, *EventRequest) (*Event, error)
	UpdateEventById(context.Context, *UpdateRequest) (*UpdateResponse, error)
	ManageEventById(context.Context, *EventRequest) (*ManageEventResponse, error)
	UpdateFeaturedEventById(context.Context, *UpdateFeaturedRequest) (*UpdateResponse, error)
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).CreateEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_Rollback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Rollback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/Rollback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Rollback(ctx, req.(*RollbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetEventsByUserId_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventServiceServer).GetEventsByUserId(m, &eventServiceGetEventsByUserIdServer{stream})
}

type EventService_GetEventsByUserIdServer interface {
	Send(*EventItem) error
	grpc.ServerStream
}

type eventServiceGetEventsByUserIdServer struct {
	grpc.ServerStream
}

func (x *eventServiceGetEventsByUserIdServer) Send(m *EventItem) error {
	return x.ServerStream.SendMsg(m)
}

func _EventService_GetEventById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetEventById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetEventById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetEventById(ctx, req.(*EventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_UpdateEventById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).UpdateEventById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/UpdateEventById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).UpdateEventById(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_ManageEventById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).ManageEventById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/ManageEventById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).ManageEventById(ctx, req.(*EventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_UpdateFeaturedEventById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFeaturedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).UpdateFeaturedEventById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/UpdateFeaturedEventById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).UpdateFeaturedEventById(ctx, req.(*UpdateFeaturedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _EventService_CreateEvent_Handler,
		},
		{
			MethodName: "Rollback",
			Handler:    _EventService_Rollback_Handler,
		},
		{
			MethodName: "GetEventById",
			Handler:    _EventService_GetEventById_Handler,
		},
		{
			MethodName: "UpdateEventById",
			Handler:    _EventService_UpdateEventById_Handler,
		},
		{
			MethodName: "ManageEventById",
			Handler:    _EventService_ManageEventById_Handler,
		},
		{
			MethodName: "UpdateFeaturedEventById",
			Handler:    _EventService_UpdateFeaturedEventById_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEventsByUserId",
			Handler:       _EventService_GetEventsByUserId_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "event.proto",
}
